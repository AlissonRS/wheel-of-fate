{"version":3,"sources":["webpack:///./src/app/routes/home/home.module.ts","webpack:///./src/app/routes/home/home/home.component.html","webpack:///./src/app/routes/home/home/home.component.scss","webpack:///./src/app/routes/home/home/home.component.ts","webpack:///./src/app/services/teams/teams.service.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CommonModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [HomeComponent],\r\n    exports: [\r\n        RouterModule,\r\n        CommonModule\r\n    ]\r\n})\r\nexport class HomeModule { }","module.exports = \"<div class=\\\"content-heading\\\">The Support Wheel of Fate\\r\\n    <small>Select one of your teams and find the schedules below!!!</small>\\r\\n</div>\\r\\n<!-- START row-->\\r\\n<div class=\\\"calendar-app\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Team\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"teamCtrl\\\">\\r\\n                    </mat-form-field>\\r\\n                    <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayTeamInAutoComplete\\\" (optionSelected)='teamChanged($event.option.value)'>\\r\\n                        <mat-option *ngFor=\\\"let team of filteredTeams | async\\\" [value]=\\\"team\\\">\\r\\n                            {{ team.name }}\\r\\n                        </mat-option>\\r\\n                    </mat-autocomplete>\\r\\n                    <div #fullcalendar class=\\\"calendar\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/* ========================================================================\\r\\n     Component: media-queries\\r\\n ========================================================================== */\\n.home-container {\\n  margin: 0 auto;\\n  max-width: 970px; }\\n.home-container .home-logo {\\n    width: 240px; }\\n@media only screen and (max-width: 768px) {\\n    .home-container .home-text {\\n      text-align: center; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ElementRef } from '@angular/core';\r\nimport { ViewChild } from '@angular/core';\r\nimport { UsersService } from '../../../services/users/users.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport 'rxjs/add/operator/startWith';\r\nimport { Observable } from 'rxjs';\r\nimport { TeamsService } from '../../../services/teams/teams.service';\r\nimport { MatAutocomplete } from '@angular/material';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    $calendar: any;\r\n\r\n    calendarOptions: any = {\r\n        // isRTL: true,\r\n        header: {\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'month,agendaWeek,agendaDay'\r\n        },\r\n        buttonIcons: { // note the space at the beginning\r\n            prev: ' fa fa-caret-left',\r\n            next: ' fa fa-caret-right'\r\n        },\r\n        buttonText: {\r\n            today: 'Today',\r\n            month: 'Month',\r\n            week: 'Week',\r\n            day: 'Day'\r\n        },\r\n        editable: false,\r\n        droppable: false,\r\n        eventOrder: 'order',\r\n        viewRender: this.calendarDateChanged.bind(this)\r\n    };\r\n\r\n    selectedEvent = null;\r\n\r\n    // Component - Autocomplete\r\n    teamCtrl: FormControl = new FormControl();\r\n    filteredTeams: Observable<any>;\r\n    teams: any;\r\n    selectedTeam: any;\r\n \r\n    // reference to the calendar element\r\n    @ViewChild('fullcalendar') fullcalendar: ElementRef;\r\n    @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\r\n\r\n    constructor(\r\n        private usersService: UsersService,\r\n        private teamsService: TeamsService\r\n    ) {\r\n        this.loadTeams();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.$calendar = $(this.fullcalendar.nativeElement);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // init calendar plugin\r\n        this.$calendar.fullCalendar(this.calendarOptions);\r\n    }\r\n\r\n    calendarDateChanged() {\r\n        this.loadShiftsByTeam();\r\n    }\r\n\r\n    displayTeamInAutoComplete(team): string | undefined {\r\n        return team ? team.name : undefined;\r\n    }\r\n\r\n    filterTeams(val: any): any {\r\n        return val ? this.teams.filter((team) => new RegExp(val, 'gi').test(team.name)) : this.teams;\r\n    }\r\n\r\n    loadShiftsByTeam() {\r\n        if (this.selectedTeam == undefined)\r\n            return;\r\n        var date = this.$calendar.fullCalendar('getDate');\r\n        var month = date.month();\r\n        var year = date.year();\r\n        this.calendarOptions.events = [];\r\n        this.$calendar.fullCalendar('removeEvents');\r\n        this.teamsService.getShifts(this.selectedTeam.id, month, year).subscribe(shifts => {\r\n            console.log(shifts);\r\n            let events = shifts.map(shift => {\r\n                return {\r\n                    title: shift.engineer,\r\n                    start: new Date(shift.date),\r\n                    order: shift.order,\r\n                    allDay: true,\r\n                    backgroundColor: '#0073b7', //Blue\r\n                    borderColor: '#0073b7' //Blue\r\n                };\r\n            });\r\n            // display events in calendar\r\n            this.$calendar.fullCalendar('renderEvents', events);\r\n        });\r\n    }\r\n\r\n    loadTeams() {\r\n        this.usersService.getTeams().subscribe(teams => {\r\n            this.teams = teams;\r\n            this.filteredTeams = this.teamCtrl.valueChanges\r\n                .startWith(null)\r\n                .map(team => this.filterTeams(team));\r\n        });\r\n    }\r\n\r\n    teamChanged(team) {\r\n        this.selectedTeam = team;\r\n        this.loadShiftsByTeam();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.$calendar.fullCalendar('destroy')\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n\n  private apiUrl: string = environment.apiUrl + 'teams';\n  \n  constructor(private http: HttpClient) { }\n\n\n  getShifts(teamId, month, year): Observable<any> {\n    let data = {\n      TeamId: teamId,\n      Month: month,\n      Year: year\n    };\n    return this.http.post(this.apiUrl + '/shifts', data);\n  }\n\n\n}\n"],"sourceRoot":""}